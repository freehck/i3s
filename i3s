#!/bin/dash

set -e

# DEFAULTS
GLOBAL_CONFIG_PATH="/etc/i3s/i3s.conf"
USER_CONFIG_PATH="$HOME/.i3s.conf"

PLUGINS_DIR=${PLUGINS_DIR:-"/usr/lib/i3s/plugins"}
USE_PLUGINS=${USE_PLUGINS:-"memory load time"}

# color aliases
WHITE="#ffffff"
ORANGE="#ff7f00"
RED="#ff0000"
YELLOW="#ffff00"
GREEN="#00ff00"
GREEN_LIGHT="#99ff99"
GRAY="#999999"

DEFAULT_COLOR=$WHITE
REFRESH_TIMEOUT=1 # in seconds

# IMPLEMENTATION
# value of reference variable (containing
refval() {
    echo $(eval "echo \$$1")
}

# config timeouts
config_timeout_var() {
    temp=$(to_upper "$1")
    echo "${temp}_TIMEOUT"
}

get_config_timeout() {
    timeout=
    timeout=$(refval $(config_timeout_var $1))
    if [ -z "$timeout" ]; then
	echo "$REFRESH_TIMEOUT"
    else
	echo "$timeout"
    fi
}

# timeouts (checking if refresh time for this plugin is out)
timeout_var() {
    temp=$(to_upper "$1")
    echo "I3S_${temp}_TIMEOUT"
}

get_timeout() {
    echo $(refval $(timeout_var $1))
}

set_timeout() {
    eval "$(timeout_var $1)=$2"
}

check_expired() {
    return `echo "$1 > 0" | bc`
}

# texts
text_var() {
    echo "i3s_$1_text"
}

get_text() {
    echo $(refval $(text_var $1))
}

set_text() {
    eval "$(text_var $1)='$2'"
}

# other
plugin_file() {
    echo "$1.sh"
}

plugin_command() {
    echo "i3s_$1"
}

# common library

remove_quotes() {
    sed -e 's%'\''%%g'
}

to_upper() {
    echo "$1" | tr '[:lower:]' '[:upper:]'
}

# LOAD CONFIGURATION
[ -e "$GLOBAL_CONFIG_PATH" ] && . "$GLOBAL_CONFIG_PATH"
[ -e "$USER_CONFIG_PATH" ] && . "$USER_CONFIG_PATH"

for module in $USE_PLUGINS; do
    file="$PLUGINS_DIR/$(plugin_file "$module")"
    [ -e "$file" ] && . "$file" && set_timeout "$module" 0
done

# RUN
echo '{"version": 1}'
echo '['

while true
do
    text='[\n'
    comma=" "
    for module in $USE_PLUGINS
    do
	timeout=$(get_timeout "$module")
	new_timeout=`echo "$timeout - $REFRESH_TIMEOUT" | bc`
	if check_expired "$new_timeout"; then
	    plugin_text=$($(plugin_command "$module")|remove_quotes)
	    set_text "$module" "$plugin_text"
	    set_timeout "$module" $(get_config_timeout "$module")
	else
	    plugin_text=$(get_text "$module")
	    set_timeout "$module" "$new_timeout"
	fi
	text="$text $comma$plugin_text\n"
	comma=","
    done
    text="${text}],"
    echo "$text"
    sleep $REFRESH_TIMEOUT
done


